{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CardService = /*#__PURE__*/(() => {\n  class CardService {\n    constructor(http) {\n      this.http = http;\n      this.cards = new BehaviorSubject([]);\n      this.cards$ = this.cards.asObservable();\n      this.loadCards();\n    }\n    loadCards() {\n      this.http.get('assets/cards.json').subscribe(data => {\n        this.cards.next(data);\n      });\n    }\n    updateCard(updatedCard) {\n      const updatedList = this.cards.value.map(card => card.id === updatedCard.id ? updatedCard : card);\n      this.cards.next(updatedList);\n    }\n    addCard(newCard) {\n      this.cards.next([...this.cards.value, newCard]);\n    }\n    deleteCard(id) {\n      this.cards.next(this.cards.value.filter(card => card.id !== id));\n    }\n    static {\n      this.ɵfac = function CardService_Factory(t) {\n        return new (t || CardService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: CardService,\n        factory: CardService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return CardService;\n})();","map":{"version":3,"names":["BehaviorSubject","CardService","constructor","http","cards","cards$","asObservable","loadCards","get","subscribe","data","next","updateCard","updatedCard","updatedList","value","map","card","id","addCard","newCard","deleteCard","filter","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\krava\\OneDrive\\Desktop\\angular_cards\\src\\app\\services\\card.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Card } from '../models/card.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CardService {\r\n  private cards = new BehaviorSubject<Card[]>([]);\r\n  cards$ = this.cards.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.loadCards();\r\n  }\r\n\r\n  loadCards() {\r\n    this.http.get<Card[]>('assets/cards.json').subscribe((data) => {\r\n      this.cards.next(data);\r\n    });\r\n  }\r\n\r\n  updateCard(updatedCard: Card) {\r\n    const updatedList = this.cards.value.map(card =>\r\n      card.id === updatedCard.id ? updatedCard : card\r\n    );\r\n    this.cards.next(updatedList);\r\n  }\r\n\r\n  addCard(newCard: Card) {\r\n    this.cards.next([...this.cards.value, newCard]);\r\n  }\r\n\r\n  deleteCard(id: number) {\r\n    this.cards.next(this.cards.value.filter(card => card.id !== id));\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;;AAIlD,WAAaC,WAAW;EAAlB,MAAOA,WAAW;IAItBC,YAAoBC,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;MAHhB,KAAAC,KAAK,GAAG,IAAIJ,eAAe,CAAS,EAAE,CAAC;MAC/C,KAAAK,MAAM,GAAG,IAAI,CAACD,KAAK,CAACE,YAAY,EAAE;MAGhC,IAAI,CAACC,SAAS,EAAE;IAClB;IAEAA,SAASA,CAAA;MACP,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAS,mBAAmB,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAI;QAC5D,IAAI,CAACN,KAAK,CAACO,IAAI,CAACD,IAAI,CAAC;MACvB,CAAC,CAAC;IACJ;IAEAE,UAAUA,CAACC,WAAiB;MAC1B,MAAMC,WAAW,GAAG,IAAI,CAACV,KAAK,CAACW,KAAK,CAACC,GAAG,CAACC,IAAI,IAC3CA,IAAI,CAACC,EAAE,KAAKL,WAAW,CAACK,EAAE,GAAGL,WAAW,GAAGI,IAAI,CAChD;MACD,IAAI,CAACb,KAAK,CAACO,IAAI,CAACG,WAAW,CAAC;IAC9B;IAEAK,OAAOA,CAACC,OAAa;MACnB,IAAI,CAAChB,KAAK,CAACO,IAAI,CAAC,CAAC,GAAG,IAAI,CAACP,KAAK,CAACW,KAAK,EAAEK,OAAO,CAAC,CAAC;IACjD;IAEAC,UAAUA,CAACH,EAAU;MACnB,IAAI,CAACd,KAAK,CAACO,IAAI,CAAC,IAAI,CAACP,KAAK,CAACW,KAAK,CAACO,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;IAClE;;;yBA3BWjB,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;MAAA;IAAA;;;eAAXzB,WAAW;QAAA0B,OAAA,EAAX1B,WAAW,CAAA2B,IAAA;QAAAC,UAAA,EADE;MAAM;IAAA;;SACnB5B,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}